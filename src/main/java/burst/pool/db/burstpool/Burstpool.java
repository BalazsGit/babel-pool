/*
 * This file is generated by jOOQ.
 */
package burst.pool.db.burstpool;


import burst.pool.db.DefaultCatalog;
import burst.pool.db.burstpool.tables.Bestsubmissions;
import burst.pool.db.burstpool.tables.Minerdeadlines;
import burst.pool.db.burstpool.tables.Miners;
import burst.pool.db.burstpool.tables.Poolstate;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Burstpool extends SchemaImpl {

    private static final long serialVersionUID = -184051675;

    /**
     * The reference instance of <code>BURSTPOOL</code>
     */
    public static final Burstpool BURSTPOOL = new Burstpool();

    /**
     * The table <code>BURSTPOOL.BESTSUBMISSIONS</code>.
     */
    public final Bestsubmissions BESTSUBMISSIONS = burst.pool.db.burstpool.tables.Bestsubmissions.BESTSUBMISSIONS;

    /**
     * The table <code>BURSTPOOL.MINERDEADLINES</code>.
     */
    public final Minerdeadlines MINERDEADLINES = burst.pool.db.burstpool.tables.Minerdeadlines.MINERDEADLINES;

    /**
     * The table <code>BURSTPOOL.MINERS</code>.
     */
    public final Miners MINERS = burst.pool.db.burstpool.tables.Miners.MINERS;

    /**
     * The table <code>BURSTPOOL.POOLSTATE</code>.
     */
    public final Poolstate POOLSTATE = burst.pool.db.burstpool.tables.Poolstate.POOLSTATE;

    /**
     * No further instances allowed
     */
    private Burstpool() {
        super("BURSTPOOL", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Bestsubmissions.BESTSUBMISSIONS,
            Minerdeadlines.MINERDEADLINES,
            Miners.MINERS,
            Poolstate.POOLSTATE);
    }
}
