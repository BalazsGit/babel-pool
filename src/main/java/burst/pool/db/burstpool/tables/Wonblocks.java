/*
 * This file is generated by jOOQ.
 */
package burst.pool.db.burstpool.tables;


import burst.pool.db.burstpool.Burstpool;
import burst.pool.db.burstpool.Indexes;
import burst.pool.db.burstpool.Keys;
import burst.pool.db.burstpool.tables.records.WonblocksRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Wonblocks extends TableImpl<WonblocksRecord> {

    private static final long serialVersionUID = -2011969754;

    /**
     * The reference instance of <code>BURSTPOOL.WONBLOCKS</code>
     */
    public static final Wonblocks WONBLOCKS = new Wonblocks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WonblocksRecord> getRecordType() {
        return WonblocksRecord.class;
    }

    /**
     * The column <code>BURSTPOOL.WONBLOCKS.DB_ID</code>.
     */
    public final TableField<WonblocksRecord, Long> DB_ID = createField("DB_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>BURSTPOOL.WONBLOCKS.BLOCKHEIGHT</code>.
     */
    public final TableField<WonblocksRecord, Long> BLOCKHEIGHT = createField("BLOCKHEIGHT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>BURSTPOOL.WONBLOCKS.BLOCKID</code>.
     */
    public final TableField<WonblocksRecord, Long> BLOCKID = createField("BLOCKID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>BURSTPOOL.WONBLOCKS.GENERATORID</code>.
     */
    public final TableField<WonblocksRecord, Long> GENERATORID = createField("GENERATORID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>BURSTPOOL.WONBLOCKS.NONCE</code>.
     */
    public final TableField<WonblocksRecord, String> NONCE = createField("NONCE", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>BURSTPOOL.WONBLOCKS.FULLREWARD</code>.
     */
    public final TableField<WonblocksRecord, Long> FULLREWARD = createField("FULLREWARD", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>BURSTPOOL.WONBLOCKS</code> table reference
     */
    public Wonblocks() {
        this(DSL.name("WONBLOCKS"), null);
    }

    /**
     * Create an aliased <code>BURSTPOOL.WONBLOCKS</code> table reference
     */
    public Wonblocks(String alias) {
        this(DSL.name(alias), WONBLOCKS);
    }

    /**
     * Create an aliased <code>BURSTPOOL.WONBLOCKS</code> table reference
     */
    public Wonblocks(Name alias) {
        this(alias, WONBLOCKS);
    }

    private Wonblocks(Name alias, Table<WonblocksRecord> aliased) {
        this(alias, aliased, null);
    }

    private Wonblocks(Name alias, Table<WonblocksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Wonblocks(Table<O> child, ForeignKey<O, WonblocksRecord> key) {
        super(child, key, WONBLOCKS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Burstpool.BURSTPOOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_4);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WonblocksRecord, Long> getIdentity() {
        return Keys.IDENTITY_WONBLOCKS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WonblocksRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_4;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WonblocksRecord>> getKeys() {
        return Arrays.<UniqueKey<WonblocksRecord>>asList(Keys.CONSTRAINT_4);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Wonblocks as(String alias) {
        return new Wonblocks(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Wonblocks as(Name alias) {
        return new Wonblocks(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Wonblocks rename(String name) {
        return new Wonblocks(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Wonblocks rename(Name name) {
        return new Wonblocks(name, null);
    }
}
