/*
 * This file is generated by jOOQ.
 */
package burst.pool.db.burstpool.tables;


import burst.pool.db.burstpool.Burstpool;
import burst.pool.db.burstpool.Indexes;
import burst.pool.db.burstpool.Keys;
import burst.pool.db.burstpool.tables.records.MinerdeadlinesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Minerdeadlines extends TableImpl<MinerdeadlinesRecord> {

    private static final long serialVersionUID = 73824730;

    /**
     * The reference instance of <code>BURSTPOOL.MINERDEADLINES</code>
     */
    public static final Minerdeadlines MINERDEADLINES = new Minerdeadlines();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MinerdeadlinesRecord> getRecordType() {
        return MinerdeadlinesRecord.class;
    }

    /**
     * The column <code>BURSTPOOL.MINERDEADLINES.DB_ID</code>.
     */
    public final TableField<MinerdeadlinesRecord, Long> DB_ID = createField("DB_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>BURSTPOOL.MINERDEADLINES.ACCOUNT_ID</code>.
     */
    public final TableField<MinerdeadlinesRecord, Long> ACCOUNT_ID = createField("ACCOUNT_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>BURSTPOOL.MINERDEADLINES.HEIGHT</code>.
     */
    public final TableField<MinerdeadlinesRecord, Long> HEIGHT = createField("HEIGHT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>BURSTPOOL.MINERDEADLINES.DEADLINE</code>.
     */
    public final TableField<MinerdeadlinesRecord, Long> DEADLINE = createField("DEADLINE", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>BURSTPOOL.MINERDEADLINES.BASETARGET</code>.
     */
    public final TableField<MinerdeadlinesRecord, Long> BASETARGET = createField("BASETARGET", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>BURSTPOOL.MINERDEADLINES</code> table reference
     */
    public Minerdeadlines() {
        this(DSL.name("MINERDEADLINES"), null);
    }

    /**
     * Create an aliased <code>BURSTPOOL.MINERDEADLINES</code> table reference
     */
    public Minerdeadlines(String alias) {
        this(DSL.name(alias), MINERDEADLINES);
    }

    /**
     * Create an aliased <code>BURSTPOOL.MINERDEADLINES</code> table reference
     */
    public Minerdeadlines(Name alias) {
        this(alias, MINERDEADLINES);
    }

    private Minerdeadlines(Name alias, Table<MinerdeadlinesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Minerdeadlines(Name alias, Table<MinerdeadlinesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Minerdeadlines(Table<O> child, ForeignKey<O, MinerdeadlinesRecord> key) {
        super(child, key, MINERDEADLINES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Burstpool.BURSTPOOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_F);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MinerdeadlinesRecord, Long> getIdentity() {
        return Keys.IDENTITY_MINERDEADLINES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MinerdeadlinesRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_F;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MinerdeadlinesRecord>> getKeys() {
        return Arrays.<UniqueKey<MinerdeadlinesRecord>>asList(Keys.CONSTRAINT_F);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Minerdeadlines as(String alias) {
        return new Minerdeadlines(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Minerdeadlines as(Name alias) {
        return new Minerdeadlines(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Minerdeadlines rename(String name) {
        return new Minerdeadlines(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Minerdeadlines rename(Name name) {
        return new Minerdeadlines(name, null);
    }
}
