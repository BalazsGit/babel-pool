/*
 * This file is generated by jOOQ.
 */
package burst.pool.migrator.db.burstpool.tables;


import burst.pool.migrator.db.burstpool.Burstpool;
import burst.pool.migrator.db.burstpool.Indexes;
import burst.pool.migrator.db.burstpool.Keys;
import burst.pool.migrator.db.burstpool.tables.records.BestsubmissionsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bestsubmissions extends TableImpl<BestsubmissionsRecord> {

    private static final long serialVersionUID = 1414577531;

    /**
     * The reference instance of <code>BURSTPOOL.BESTSUBMISSIONS</code>
     */
    public static final Bestsubmissions BESTSUBMISSIONS = new Bestsubmissions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BestsubmissionsRecord> getRecordType() {
        return BestsubmissionsRecord.class;
    }

    /**
     * The column <code>BURSTPOOL.BESTSUBMISSIONS.DB_ID</code>.
     */
    public final TableField<BestsubmissionsRecord, Long> DB_ID = createField("DB_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>BURSTPOOL.BESTSUBMISSIONS.HEIGHT</code>.
     */
    public final TableField<BestsubmissionsRecord, Long> HEIGHT = createField("HEIGHT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>BURSTPOOL.BESTSUBMISSIONS.ACCOUNTID</code>.
     */
    public final TableField<BestsubmissionsRecord, Long> ACCOUNTID = createField("ACCOUNTID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>BURSTPOOL.BESTSUBMISSIONS.NONCE</code>.
     */
    public final TableField<BestsubmissionsRecord, String> NONCE = createField("NONCE", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>BURSTPOOL.BESTSUBMISSIONS.DEADLINE</code>.
     */
    public final TableField<BestsubmissionsRecord, Long> DEADLINE = createField("DEADLINE", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>BURSTPOOL.BESTSUBMISSIONS</code> table reference
     */
    public Bestsubmissions() {
        this(DSL.name("BESTSUBMISSIONS"), null);
    }

    /**
     * Create an aliased <code>BURSTPOOL.BESTSUBMISSIONS</code> table reference
     */
    public Bestsubmissions(String alias) {
        this(DSL.name(alias), BESTSUBMISSIONS);
    }

    /**
     * Create an aliased <code>BURSTPOOL.BESTSUBMISSIONS</code> table reference
     */
    public Bestsubmissions(Name alias) {
        this(alias, BESTSUBMISSIONS);
    }

    private Bestsubmissions(Name alias, Table<BestsubmissionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Bestsubmissions(Name alias, Table<BestsubmissionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Bestsubmissions(Table<O> child, ForeignKey<O, BestsubmissionsRecord> key) {
        super(child, key, BESTSUBMISSIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Burstpool.BURSTPOOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_6);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BestsubmissionsRecord, Long> getIdentity() {
        return Keys.IDENTITY_BESTSUBMISSIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BestsubmissionsRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_6;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BestsubmissionsRecord>> getKeys() {
        return Arrays.<UniqueKey<BestsubmissionsRecord>>asList(Keys.CONSTRAINT_6);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bestsubmissions as(String alias) {
        return new Bestsubmissions(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bestsubmissions as(Name alias) {
        return new Bestsubmissions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Bestsubmissions rename(String name) {
        return new Bestsubmissions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Bestsubmissions rename(Name name) {
        return new Bestsubmissions(name, null);
    }
}
