/*
 * This file is generated by jOOQ.
 */
package burst.pool.migrator.nogroddb.mysql.tables.records;


import burst.pool.migrator.nogroddb.mysql.enums.ColumnStatsHistType;
import burst.pool.migrator.nogroddb.mysql.tables.ColumnStats;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Record3;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;


/**
 * Statistics on Columns
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ColumnStatsRecord extends UpdatableRecordImpl<ColumnStatsRecord> implements Record11<String, String, String, byte[], byte[], BigDecimal, BigDecimal, BigDecimal, UByte, ColumnStatsHistType, byte[]> {

    private static final long serialVersionUID = 439193323;

    /**
     * Setter for <code>mysql.column_stats.db_name</code>.
     */
    public void setDbName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>mysql.column_stats.db_name</code>.
     */
    public String getDbName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mysql.column_stats.table_name</code>.
     */
    public void setTableName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mysql.column_stats.table_name</code>.
     */
    public String getTableName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mysql.column_stats.column_name</code>.
     */
    public void setColumnName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mysql.column_stats.column_name</code>.
     */
    public String getColumnName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mysql.column_stats.min_value</code>.
     */
    public void setMinValue(byte... value) {
        set(3, value);
    }

    /**
     * Getter for <code>mysql.column_stats.min_value</code>.
     */
    public byte[] getMinValue() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>mysql.column_stats.max_value</code>.
     */
    public void setMaxValue(byte... value) {
        set(4, value);
    }

    /**
     * Getter for <code>mysql.column_stats.max_value</code>.
     */
    public byte[] getMaxValue() {
        return (byte[]) get(4);
    }

    /**
     * Setter for <code>mysql.column_stats.nulls_ratio</code>.
     */
    public void setNullsRatio(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>mysql.column_stats.nulls_ratio</code>.
     */
    public BigDecimal getNullsRatio() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>mysql.column_stats.avg_length</code>.
     */
    public void setAvgLength(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>mysql.column_stats.avg_length</code>.
     */
    public BigDecimal getAvgLength() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>mysql.column_stats.avg_frequency</code>.
     */
    public void setAvgFrequency(BigDecimal value) {
        set(7, value);
    }

    /**
     * Getter for <code>mysql.column_stats.avg_frequency</code>.
     */
    public BigDecimal getAvgFrequency() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>mysql.column_stats.hist_size</code>.
     */
    public void setHistSize(UByte value) {
        set(8, value);
    }

    /**
     * Getter for <code>mysql.column_stats.hist_size</code>.
     */
    public UByte getHistSize() {
        return (UByte) get(8);
    }

    /**
     * Setter for <code>mysql.column_stats.hist_type</code>.
     */
    public void setHistType(ColumnStatsHistType value) {
        set(9, value);
    }

    /**
     * Getter for <code>mysql.column_stats.hist_type</code>.
     */
    public ColumnStatsHistType getHistType() {
        return (ColumnStatsHistType) get(9);
    }

    /**
     * Setter for <code>mysql.column_stats.histogram</code>.
     */
    public void setHistogram(byte... value) {
        set(10, value);
    }

    /**
     * Getter for <code>mysql.column_stats.histogram</code>.
     */
    public byte[] getHistogram() {
        return (byte[]) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<String, String, String, byte[], byte[], BigDecimal, BigDecimal, BigDecimal, UByte, ColumnStatsHistType, byte[]> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<String, String, String, byte[], byte[], BigDecimal, BigDecimal, BigDecimal, UByte, ColumnStatsHistType, byte[]> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ColumnStats.COLUMN_STATS.DB_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ColumnStats.COLUMN_STATS.TABLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ColumnStats.COLUMN_STATS.COLUMN_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field4() {
        return ColumnStats.COLUMN_STATS.MIN_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field5() {
        return ColumnStats.COLUMN_STATS.MAX_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field6() {
        return ColumnStats.COLUMN_STATS.NULLS_RATIO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field7() {
        return ColumnStats.COLUMN_STATS.AVG_LENGTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field8() {
        return ColumnStats.COLUMN_STATS.AVG_FREQUENCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UByte> field9() {
        return ColumnStats.COLUMN_STATS.HIST_SIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ColumnStatsHistType> field10() {
        return ColumnStats.COLUMN_STATS.HIST_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field11() {
        return ColumnStats.COLUMN_STATS.HISTOGRAM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getDbName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getColumnName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component4() {
        return getMinValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component5() {
        return getMaxValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component6() {
        return getNullsRatio();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component7() {
        return getAvgLength();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component8() {
        return getAvgFrequency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte component9() {
        return getHistSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsHistType component10() {
        return getHistType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component11() {
        return getHistogram();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getDbName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getColumnName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value4() {
        return getMinValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value5() {
        return getMaxValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value6() {
        return getNullsRatio();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value7() {
        return getAvgLength();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value8() {
        return getAvgFrequency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte value9() {
        return getHistSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsHistType value10() {
        return getHistType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value11() {
        return getHistogram();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsRecord value1(String value) {
        setDbName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsRecord value2(String value) {
        setTableName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsRecord value3(String value) {
        setColumnName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsRecord value4(byte... value) {
        setMinValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsRecord value5(byte... value) {
        setMaxValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsRecord value6(BigDecimal value) {
        setNullsRatio(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsRecord value7(BigDecimal value) {
        setAvgLength(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsRecord value8(BigDecimal value) {
        setAvgFrequency(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsRecord value9(UByte value) {
        setHistSize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsRecord value10(ColumnStatsHistType value) {
        setHistType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsRecord value11(byte... value) {
        setHistogram(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStatsRecord values(String value1, String value2, String value3, byte[] value4, byte[] value5, BigDecimal value6, BigDecimal value7, BigDecimal value8, UByte value9, ColumnStatsHistType value10, byte[] value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ColumnStatsRecord
     */
    public ColumnStatsRecord() {
        super(ColumnStats.COLUMN_STATS);
    }

    /**
     * Create a detached, initialised ColumnStatsRecord
     */
    public ColumnStatsRecord(String dbName, String tableName, String columnName, byte[] minValue, byte[] maxValue, BigDecimal nullsRatio, BigDecimal avgLength, BigDecimal avgFrequency, UByte histSize, ColumnStatsHistType histType, byte[] histogram) {
        super(ColumnStats.COLUMN_STATS);

        set(0, dbName);
        set(1, tableName);
        set(2, columnName);
        set(3, minValue);
        set(4, maxValue);
        set(5, nullsRatio);
        set(6, avgLength);
        set(7, avgFrequency);
        set(8, histSize);
        set(9, histType);
        set(10, histogram);
    }
}
