/*
 * This file is generated by jOOQ.
 */
package burst.pool.migrator.nogroddb.mysql.tables.records;


import burst.pool.migrator.nogroddb.mysql.enums.RolesMappingAdminOption;
import burst.pool.migrator.nogroddb.mysql.tables.RolesMapping;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * Granted roles
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolesMappingRecord extends TableRecordImpl<RolesMappingRecord> implements Record4<String, String, String, RolesMappingAdminOption> {

    private static final long serialVersionUID = -1962970479;

    /**
     * Setter for <code>mysql.roles_mapping.Host</code>.
     */
    public void setHost(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>mysql.roles_mapping.Host</code>.
     */
    public String getHost() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mysql.roles_mapping.User</code>.
     */
    public void setUser(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mysql.roles_mapping.User</code>.
     */
    public String getUser() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mysql.roles_mapping.Role</code>.
     */
    public void setRole(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mysql.roles_mapping.Role</code>.
     */
    public String getRole() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mysql.roles_mapping.Admin_option</code>.
     */
    public void setAdminOption(RolesMappingAdminOption value) {
        set(3, value);
    }

    /**
     * Getter for <code>mysql.roles_mapping.Admin_option</code>.
     */
    public RolesMappingAdminOption getAdminOption() {
        return (RolesMappingAdminOption) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, RolesMappingAdminOption> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, RolesMappingAdminOption> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return RolesMapping.ROLES_MAPPING.HOST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return RolesMapping.ROLES_MAPPING.USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return RolesMapping.ROLES_MAPPING.ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<RolesMappingAdminOption> field4() {
        return RolesMapping.ROLES_MAPPING.ADMIN_OPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getHost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RolesMappingAdminOption component4() {
        return getAdminOption();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getHost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RolesMappingAdminOption value4() {
        return getAdminOption();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RolesMappingRecord value1(String value) {
        setHost(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RolesMappingRecord value2(String value) {
        setUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RolesMappingRecord value3(String value) {
        setRole(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RolesMappingRecord value4(RolesMappingAdminOption value) {
        setAdminOption(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RolesMappingRecord values(String value1, String value2, String value3, RolesMappingAdminOption value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RolesMappingRecord
     */
    public RolesMappingRecord() {
        super(RolesMapping.ROLES_MAPPING);
    }

    /**
     * Create a detached, initialised RolesMappingRecord
     */
    public RolesMappingRecord(String host, String user, String role, RolesMappingAdminOption adminOption) {
        super(RolesMapping.ROLES_MAPPING);

        set(0, host);
        set(1, user);
        set(2, role);
        set(3, adminOption);
    }
}
