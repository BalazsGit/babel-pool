/*
 * This file is generated by jOOQ.
 */
package burst.pool.migrator.nogroddb.mysql.tables;


import burst.pool.migrator.nogroddb.mysql.Indexes;
import burst.pool.migrator.nogroddb.mysql.Keys;
import burst.pool.migrator.nogroddb.mysql.Mysql;
import burst.pool.migrator.nogroddb.mysql.enums.HostAlterPriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostAlterRoutinePriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostCreatePriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostCreateRoutinePriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostCreateTmpTablePriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostCreateViewPriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostDeletePriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostDropPriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostExecutePriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostGrantPriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostIndexPriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostInsertPriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostLockTablesPriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostReferencesPriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostSelectPriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostShowViewPriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostTriggerPriv;
import burst.pool.migrator.nogroddb.mysql.enums.HostUpdatePriv;
import burst.pool.migrator.nogroddb.mysql.tables.records.HostRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Host privileges;  Merged with database privileges
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Host extends TableImpl<HostRecord> {

    private static final long serialVersionUID = 435948125;

    /**
     * The reference instance of <code>mysql.host</code>
     */
    public static final Host HOST = new Host();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HostRecord> getRecordType() {
        return HostRecord.class;
    }

    /**
     * The column <code>mysql.host.Host</code>.
     */
    public final TableField<HostRecord, String> HOST_ = createField("Host", org.jooq.impl.SQLDataType.CHAR(60).nullable(false).defaultValue(org.jooq.impl.DSL.field("''", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>mysql.host.Db</code>.
     */
    public final TableField<HostRecord, String> DB = createField("Db", org.jooq.impl.SQLDataType.CHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.field("''", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>mysql.host.Select_priv</code>.
     */
    public final TableField<HostRecord, HostSelectPriv> SELECT_PRIV = createField("Select_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostSelectPriv.class), this, "");

    /**
     * The column <code>mysql.host.Insert_priv</code>.
     */
    public final TableField<HostRecord, HostInsertPriv> INSERT_PRIV = createField("Insert_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostInsertPriv.class), this, "");

    /**
     * The column <code>mysql.host.Update_priv</code>.
     */
    public final TableField<HostRecord, HostUpdatePriv> UPDATE_PRIV = createField("Update_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostUpdatePriv.class), this, "");

    /**
     * The column <code>mysql.host.Delete_priv</code>.
     */
    public final TableField<HostRecord, HostDeletePriv> DELETE_PRIV = createField("Delete_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostDeletePriv.class), this, "");

    /**
     * The column <code>mysql.host.Create_priv</code>.
     */
    public final TableField<HostRecord, HostCreatePriv> CREATE_PRIV = createField("Create_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostCreatePriv.class), this, "");

    /**
     * The column <code>mysql.host.Drop_priv</code>.
     */
    public final TableField<HostRecord, HostDropPriv> DROP_PRIV = createField("Drop_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostDropPriv.class), this, "");

    /**
     * The column <code>mysql.host.Grant_priv</code>.
     */
    public final TableField<HostRecord, HostGrantPriv> GRANT_PRIV = createField("Grant_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostGrantPriv.class), this, "");

    /**
     * The column <code>mysql.host.References_priv</code>.
     */
    public final TableField<HostRecord, HostReferencesPriv> REFERENCES_PRIV = createField("References_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostReferencesPriv.class), this, "");

    /**
     * The column <code>mysql.host.Index_priv</code>.
     */
    public final TableField<HostRecord, HostIndexPriv> INDEX_PRIV = createField("Index_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostIndexPriv.class), this, "");

    /**
     * The column <code>mysql.host.Alter_priv</code>.
     */
    public final TableField<HostRecord, HostAlterPriv> ALTER_PRIV = createField("Alter_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostAlterPriv.class), this, "");

    /**
     * The column <code>mysql.host.Create_tmp_table_priv</code>.
     */
    public final TableField<HostRecord, HostCreateTmpTablePriv> CREATE_TMP_TABLE_PRIV = createField("Create_tmp_table_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostCreateTmpTablePriv.class), this, "");

    /**
     * The column <code>mysql.host.Lock_tables_priv</code>.
     */
    public final TableField<HostRecord, HostLockTablesPriv> LOCK_TABLES_PRIV = createField("Lock_tables_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostLockTablesPriv.class), this, "");

    /**
     * The column <code>mysql.host.Create_view_priv</code>.
     */
    public final TableField<HostRecord, HostCreateViewPriv> CREATE_VIEW_PRIV = createField("Create_view_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostCreateViewPriv.class), this, "");

    /**
     * The column <code>mysql.host.Show_view_priv</code>.
     */
    public final TableField<HostRecord, HostShowViewPriv> SHOW_VIEW_PRIV = createField("Show_view_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostShowViewPriv.class), this, "");

    /**
     * The column <code>mysql.host.Create_routine_priv</code>.
     */
    public final TableField<HostRecord, HostCreateRoutinePriv> CREATE_ROUTINE_PRIV = createField("Create_routine_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostCreateRoutinePriv.class), this, "");

    /**
     * The column <code>mysql.host.Alter_routine_priv</code>.
     */
    public final TableField<HostRecord, HostAlterRoutinePriv> ALTER_ROUTINE_PRIV = createField("Alter_routine_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostAlterRoutinePriv.class), this, "");

    /**
     * The column <code>mysql.host.Execute_priv</code>.
     */
    public final TableField<HostRecord, HostExecutePriv> EXECUTE_PRIV = createField("Execute_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostExecutePriv.class), this, "");

    /**
     * The column <code>mysql.host.Trigger_priv</code>.
     */
    public final TableField<HostRecord, HostTriggerPriv> TRIGGER_PRIV = createField("Trigger_priv", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.HostTriggerPriv.class), this, "");

    /**
     * Create a <code>mysql.host</code> table reference
     */
    public Host() {
        this(DSL.name("host"), null);
    }

    /**
     * Create an aliased <code>mysql.host</code> table reference
     */
    public Host(String alias) {
        this(DSL.name(alias), HOST);
    }

    /**
     * Create an aliased <code>mysql.host</code> table reference
     */
    public Host(Name alias) {
        this(alias, HOST);
    }

    private Host(Name alias, Table<HostRecord> aliased) {
        this(alias, aliased, null);
    }

    private Host(Name alias, Table<HostRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Host privileges;  Merged with database privileges"));
    }

    public <O extends Record> Host(Table<O> child, ForeignKey<O, HostRecord> key) {
        super(child, key, HOST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mysql.MYSQL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HOST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HostRecord> getPrimaryKey() {
        return Keys.KEY_HOST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HostRecord>> getKeys() {
        return Arrays.<UniqueKey<HostRecord>>asList(Keys.KEY_HOST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Host as(String alias) {
        return new Host(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Host as(Name alias) {
        return new Host(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Host rename(String name) {
        return new Host(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Host rename(Name name) {
        return new Host(name, null);
    }
}
