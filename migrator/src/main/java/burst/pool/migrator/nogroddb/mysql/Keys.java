/*
 * This file is generated by jOOQ.
 */
package burst.pool.migrator.nogroddb.mysql;


import burst.pool.migrator.nogroddb.mysql.tables.ColumnStats;
import burst.pool.migrator.nogroddb.mysql.tables.ColumnsPriv;
import burst.pool.migrator.nogroddb.mysql.tables.Db;
import burst.pool.migrator.nogroddb.mysql.tables.Event;
import burst.pool.migrator.nogroddb.mysql.tables.Func;
import burst.pool.migrator.nogroddb.mysql.tables.GtidSlavePos;
import burst.pool.migrator.nogroddb.mysql.tables.HelpCategory;
import burst.pool.migrator.nogroddb.mysql.tables.HelpKeyword;
import burst.pool.migrator.nogroddb.mysql.tables.HelpRelation;
import burst.pool.migrator.nogroddb.mysql.tables.HelpTopic;
import burst.pool.migrator.nogroddb.mysql.tables.Host;
import burst.pool.migrator.nogroddb.mysql.tables.IndexStats;
import burst.pool.migrator.nogroddb.mysql.tables.InnodbIndexStats;
import burst.pool.migrator.nogroddb.mysql.tables.InnodbTableStats;
import burst.pool.migrator.nogroddb.mysql.tables.Plugin;
import burst.pool.migrator.nogroddb.mysql.tables.Proc;
import burst.pool.migrator.nogroddb.mysql.tables.ProcsPriv;
import burst.pool.migrator.nogroddb.mysql.tables.ProxiesPriv;
import burst.pool.migrator.nogroddb.mysql.tables.RolesMapping;
import burst.pool.migrator.nogroddb.mysql.tables.Servers;
import burst.pool.migrator.nogroddb.mysql.tables.TableStats;
import burst.pool.migrator.nogroddb.mysql.tables.TablesPriv;
import burst.pool.migrator.nogroddb.mysql.tables.TimeZone;
import burst.pool.migrator.nogroddb.mysql.tables.TimeZoneLeapSecond;
import burst.pool.migrator.nogroddb.mysql.tables.TimeZoneName;
import burst.pool.migrator.nogroddb.mysql.tables.TimeZoneTransition;
import burst.pool.migrator.nogroddb.mysql.tables.TimeZoneTransitionType;
import burst.pool.migrator.nogroddb.mysql.tables.TransactionRegistry;
import burst.pool.migrator.nogroddb.mysql.tables.User;
import burst.pool.migrator.nogroddb.mysql.tables.records.ColumnStatsRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.ColumnsPrivRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.DbRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.EventRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.FuncRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.GtidSlavePosRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.HelpCategoryRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.HelpKeywordRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.HelpRelationRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.HelpTopicRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.HostRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.IndexStatsRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.InnodbIndexStatsRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.InnodbTableStatsRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.PluginRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.ProcRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.ProcsPrivRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.ProxiesPrivRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.RolesMappingRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.ServersRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.TableStatsRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.TablesPrivRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.TimeZoneLeapSecondRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.TimeZoneNameRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.TimeZoneRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.TimeZoneTransitionRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.TimeZoneTransitionTypeRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.TransactionRegistryRecord;
import burst.pool.migrator.nogroddb.mysql.tables.records.UserRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.types.UInteger;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>mysql</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TimeZoneRecord, UInteger> IDENTITY_TIME_ZONE = Identities0.IDENTITY_TIME_ZONE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ColumnsPrivRecord> KEY_COLUMNS_PRIV_PRIMARY = UniqueKeys0.KEY_COLUMNS_PRIV_PRIMARY;
    public static final UniqueKey<ColumnStatsRecord> KEY_COLUMN_STATS_PRIMARY = UniqueKeys0.KEY_COLUMN_STATS_PRIMARY;
    public static final UniqueKey<DbRecord> KEY_DB_PRIMARY = UniqueKeys0.KEY_DB_PRIMARY;
    public static final UniqueKey<EventRecord> KEY_EVENT_PRIMARY = UniqueKeys0.KEY_EVENT_PRIMARY;
    public static final UniqueKey<FuncRecord> KEY_FUNC_PRIMARY = UniqueKeys0.KEY_FUNC_PRIMARY;
    public static final UniqueKey<GtidSlavePosRecord> KEY_GTID_SLAVE_POS_PRIMARY = UniqueKeys0.KEY_GTID_SLAVE_POS_PRIMARY;
    public static final UniqueKey<HelpCategoryRecord> KEY_HELP_CATEGORY_PRIMARY = UniqueKeys0.KEY_HELP_CATEGORY_PRIMARY;
    public static final UniqueKey<HelpCategoryRecord> KEY_HELP_CATEGORY_NAME = UniqueKeys0.KEY_HELP_CATEGORY_NAME;
    public static final UniqueKey<HelpKeywordRecord> KEY_HELP_KEYWORD_PRIMARY = UniqueKeys0.KEY_HELP_KEYWORD_PRIMARY;
    public static final UniqueKey<HelpKeywordRecord> KEY_HELP_KEYWORD_NAME = UniqueKeys0.KEY_HELP_KEYWORD_NAME;
    public static final UniqueKey<HelpRelationRecord> KEY_HELP_RELATION_PRIMARY = UniqueKeys0.KEY_HELP_RELATION_PRIMARY;
    public static final UniqueKey<HelpTopicRecord> KEY_HELP_TOPIC_PRIMARY = UniqueKeys0.KEY_HELP_TOPIC_PRIMARY;
    public static final UniqueKey<HelpTopicRecord> KEY_HELP_TOPIC_NAME = UniqueKeys0.KEY_HELP_TOPIC_NAME;
    public static final UniqueKey<HostRecord> KEY_HOST_PRIMARY = UniqueKeys0.KEY_HOST_PRIMARY;
    public static final UniqueKey<IndexStatsRecord> KEY_INDEX_STATS_PRIMARY = UniqueKeys0.KEY_INDEX_STATS_PRIMARY;
    public static final UniqueKey<InnodbIndexStatsRecord> KEY_INNODB_INDEX_STATS_PRIMARY = UniqueKeys0.KEY_INNODB_INDEX_STATS_PRIMARY;
    public static final UniqueKey<InnodbTableStatsRecord> KEY_INNODB_TABLE_STATS_PRIMARY = UniqueKeys0.KEY_INNODB_TABLE_STATS_PRIMARY;
    public static final UniqueKey<PluginRecord> KEY_PLUGIN_PRIMARY = UniqueKeys0.KEY_PLUGIN_PRIMARY;
    public static final UniqueKey<ProcRecord> KEY_PROC_PRIMARY = UniqueKeys0.KEY_PROC_PRIMARY;
    public static final UniqueKey<ProcsPrivRecord> KEY_PROCS_PRIV_PRIMARY = UniqueKeys0.KEY_PROCS_PRIV_PRIMARY;
    public static final UniqueKey<ProxiesPrivRecord> KEY_PROXIES_PRIV_PRIMARY = UniqueKeys0.KEY_PROXIES_PRIV_PRIMARY;
    public static final UniqueKey<RolesMappingRecord> KEY_ROLES_MAPPING_HOST = UniqueKeys0.KEY_ROLES_MAPPING_HOST;
    public static final UniqueKey<ServersRecord> KEY_SERVERS_PRIMARY = UniqueKeys0.KEY_SERVERS_PRIMARY;
    public static final UniqueKey<TablesPrivRecord> KEY_TABLES_PRIV_PRIMARY = UniqueKeys0.KEY_TABLES_PRIV_PRIMARY;
    public static final UniqueKey<TableStatsRecord> KEY_TABLE_STATS_PRIMARY = UniqueKeys0.KEY_TABLE_STATS_PRIMARY;
    public static final UniqueKey<TimeZoneRecord> KEY_TIME_ZONE_PRIMARY = UniqueKeys0.KEY_TIME_ZONE_PRIMARY;
    public static final UniqueKey<TimeZoneLeapSecondRecord> KEY_TIME_ZONE_LEAP_SECOND_PRIMARY = UniqueKeys0.KEY_TIME_ZONE_LEAP_SECOND_PRIMARY;
    public static final UniqueKey<TimeZoneNameRecord> KEY_TIME_ZONE_NAME_PRIMARY = UniqueKeys0.KEY_TIME_ZONE_NAME_PRIMARY;
    public static final UniqueKey<TimeZoneTransitionRecord> KEY_TIME_ZONE_TRANSITION_PRIMARY = UniqueKeys0.KEY_TIME_ZONE_TRANSITION_PRIMARY;
    public static final UniqueKey<TimeZoneTransitionTypeRecord> KEY_TIME_ZONE_TRANSITION_TYPE_PRIMARY = UniqueKeys0.KEY_TIME_ZONE_TRANSITION_TYPE_PRIMARY;
    public static final UniqueKey<TransactionRegistryRecord> KEY_TRANSACTION_REGISTRY_PRIMARY = UniqueKeys0.KEY_TRANSACTION_REGISTRY_PRIMARY;
    public static final UniqueKey<TransactionRegistryRecord> KEY_TRANSACTION_REGISTRY_COMMIT_ID = UniqueKeys0.KEY_TRANSACTION_REGISTRY_COMMIT_ID;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TimeZoneRecord, UInteger> IDENTITY_TIME_ZONE = Internal.createIdentity(TimeZone.TIME_ZONE, TimeZone.TIME_ZONE.TIME_ZONE_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ColumnsPrivRecord> KEY_COLUMNS_PRIV_PRIMARY = Internal.createUniqueKey(ColumnsPriv.COLUMNS_PRIV, "KEY_columns_priv_PRIMARY", ColumnsPriv.COLUMNS_PRIV.HOST, ColumnsPriv.COLUMNS_PRIV.DB, ColumnsPriv.COLUMNS_PRIV.USER, ColumnsPriv.COLUMNS_PRIV.TABLE_NAME, ColumnsPriv.COLUMNS_PRIV.COLUMN_NAME);
        public static final UniqueKey<ColumnStatsRecord> KEY_COLUMN_STATS_PRIMARY = Internal.createUniqueKey(ColumnStats.COLUMN_STATS, "KEY_column_stats_PRIMARY", ColumnStats.COLUMN_STATS.DB_NAME, ColumnStats.COLUMN_STATS.TABLE_NAME, ColumnStats.COLUMN_STATS.COLUMN_NAME);
        public static final UniqueKey<DbRecord> KEY_DB_PRIMARY = Internal.createUniqueKey(Db.DB, "KEY_db_PRIMARY", Db.DB.HOST, Db.DB.DB_, Db.DB.USER);
        public static final UniqueKey<EventRecord> KEY_EVENT_PRIMARY = Internal.createUniqueKey(Event.EVENT, "KEY_event_PRIMARY", Event.EVENT.DB, Event.EVENT.NAME);
        public static final UniqueKey<FuncRecord> KEY_FUNC_PRIMARY = Internal.createUniqueKey(Func.FUNC, "KEY_func_PRIMARY", Func.FUNC.NAME);
        public static final UniqueKey<GtidSlavePosRecord> KEY_GTID_SLAVE_POS_PRIMARY = Internal.createUniqueKey(GtidSlavePos.GTID_SLAVE_POS, "KEY_gtid_slave_pos_PRIMARY", GtidSlavePos.GTID_SLAVE_POS.DOMAIN_ID, GtidSlavePos.GTID_SLAVE_POS.SUB_ID);
        public static final UniqueKey<HelpCategoryRecord> KEY_HELP_CATEGORY_PRIMARY = Internal.createUniqueKey(HelpCategory.HELP_CATEGORY, "KEY_help_category_PRIMARY", HelpCategory.HELP_CATEGORY.HELP_CATEGORY_ID);
        public static final UniqueKey<HelpCategoryRecord> KEY_HELP_CATEGORY_NAME = Internal.createUniqueKey(HelpCategory.HELP_CATEGORY, "KEY_help_category_name", HelpCategory.HELP_CATEGORY.NAME);
        public static final UniqueKey<HelpKeywordRecord> KEY_HELP_KEYWORD_PRIMARY = Internal.createUniqueKey(HelpKeyword.HELP_KEYWORD, "KEY_help_keyword_PRIMARY", HelpKeyword.HELP_KEYWORD.HELP_KEYWORD_ID);
        public static final UniqueKey<HelpKeywordRecord> KEY_HELP_KEYWORD_NAME = Internal.createUniqueKey(HelpKeyword.HELP_KEYWORD, "KEY_help_keyword_name", HelpKeyword.HELP_KEYWORD.NAME);
        public static final UniqueKey<HelpRelationRecord> KEY_HELP_RELATION_PRIMARY = Internal.createUniqueKey(HelpRelation.HELP_RELATION, "KEY_help_relation_PRIMARY", HelpRelation.HELP_RELATION.HELP_KEYWORD_ID, HelpRelation.HELP_RELATION.HELP_TOPIC_ID);
        public static final UniqueKey<HelpTopicRecord> KEY_HELP_TOPIC_PRIMARY = Internal.createUniqueKey(HelpTopic.HELP_TOPIC, "KEY_help_topic_PRIMARY", HelpTopic.HELP_TOPIC.HELP_TOPIC_ID);
        public static final UniqueKey<HelpTopicRecord> KEY_HELP_TOPIC_NAME = Internal.createUniqueKey(HelpTopic.HELP_TOPIC, "KEY_help_topic_name", HelpTopic.HELP_TOPIC.NAME);
        public static final UniqueKey<HostRecord> KEY_HOST_PRIMARY = Internal.createUniqueKey(Host.HOST, "KEY_host_PRIMARY", Host.HOST.HOST_, Host.HOST.DB);
        public static final UniqueKey<IndexStatsRecord> KEY_INDEX_STATS_PRIMARY = Internal.createUniqueKey(IndexStats.INDEX_STATS, "KEY_index_stats_PRIMARY", IndexStats.INDEX_STATS.DB_NAME, IndexStats.INDEX_STATS.TABLE_NAME, IndexStats.INDEX_STATS.INDEX_NAME, IndexStats.INDEX_STATS.PREFIX_ARITY);
        public static final UniqueKey<InnodbIndexStatsRecord> KEY_INNODB_INDEX_STATS_PRIMARY = Internal.createUniqueKey(InnodbIndexStats.INNODB_INDEX_STATS, "KEY_innodb_index_stats_PRIMARY", InnodbIndexStats.INNODB_INDEX_STATS.DATABASE_NAME, InnodbIndexStats.INNODB_INDEX_STATS.TABLE_NAME, InnodbIndexStats.INNODB_INDEX_STATS.INDEX_NAME, InnodbIndexStats.INNODB_INDEX_STATS.STAT_NAME);
        public static final UniqueKey<InnodbTableStatsRecord> KEY_INNODB_TABLE_STATS_PRIMARY = Internal.createUniqueKey(InnodbTableStats.INNODB_TABLE_STATS, "KEY_innodb_table_stats_PRIMARY", InnodbTableStats.INNODB_TABLE_STATS.DATABASE_NAME, InnodbTableStats.INNODB_TABLE_STATS.TABLE_NAME);
        public static final UniqueKey<PluginRecord> KEY_PLUGIN_PRIMARY = Internal.createUniqueKey(Plugin.PLUGIN, "KEY_plugin_PRIMARY", Plugin.PLUGIN.NAME);
        public static final UniqueKey<ProcRecord> KEY_PROC_PRIMARY = Internal.createUniqueKey(Proc.PROC, "KEY_proc_PRIMARY", Proc.PROC.DB, Proc.PROC.NAME, Proc.PROC.TYPE);
        public static final UniqueKey<ProcsPrivRecord> KEY_PROCS_PRIV_PRIMARY = Internal.createUniqueKey(ProcsPriv.PROCS_PRIV, "KEY_procs_priv_PRIMARY", ProcsPriv.PROCS_PRIV.HOST, ProcsPriv.PROCS_PRIV.DB, ProcsPriv.PROCS_PRIV.USER, ProcsPriv.PROCS_PRIV.ROUTINE_NAME, ProcsPriv.PROCS_PRIV.ROUTINE_TYPE);
        public static final UniqueKey<ProxiesPrivRecord> KEY_PROXIES_PRIV_PRIMARY = Internal.createUniqueKey(ProxiesPriv.PROXIES_PRIV, "KEY_proxies_priv_PRIMARY", ProxiesPriv.PROXIES_PRIV.HOST, ProxiesPriv.PROXIES_PRIV.USER, ProxiesPriv.PROXIES_PRIV.PROXIED_HOST, ProxiesPriv.PROXIES_PRIV.PROXIED_USER);
        public static final UniqueKey<RolesMappingRecord> KEY_ROLES_MAPPING_HOST = Internal.createUniqueKey(RolesMapping.ROLES_MAPPING, "KEY_roles_mapping_Host", RolesMapping.ROLES_MAPPING.HOST, RolesMapping.ROLES_MAPPING.USER, RolesMapping.ROLES_MAPPING.ROLE);
        public static final UniqueKey<ServersRecord> KEY_SERVERS_PRIMARY = Internal.createUniqueKey(Servers.SERVERS, "KEY_servers_PRIMARY", Servers.SERVERS.SERVER_NAME);
        public static final UniqueKey<TablesPrivRecord> KEY_TABLES_PRIV_PRIMARY = Internal.createUniqueKey(TablesPriv.TABLES_PRIV, "KEY_tables_priv_PRIMARY", TablesPriv.TABLES_PRIV.HOST, TablesPriv.TABLES_PRIV.DB, TablesPriv.TABLES_PRIV.USER, TablesPriv.TABLES_PRIV.TABLE_NAME);
        public static final UniqueKey<TableStatsRecord> KEY_TABLE_STATS_PRIMARY = Internal.createUniqueKey(TableStats.TABLE_STATS, "KEY_table_stats_PRIMARY", TableStats.TABLE_STATS.DB_NAME, TableStats.TABLE_STATS.TABLE_NAME);
        public static final UniqueKey<TimeZoneRecord> KEY_TIME_ZONE_PRIMARY = Internal.createUniqueKey(TimeZone.TIME_ZONE, "KEY_time_zone_PRIMARY", TimeZone.TIME_ZONE.TIME_ZONE_ID);
        public static final UniqueKey<TimeZoneLeapSecondRecord> KEY_TIME_ZONE_LEAP_SECOND_PRIMARY = Internal.createUniqueKey(TimeZoneLeapSecond.TIME_ZONE_LEAP_SECOND, "KEY_time_zone_leap_second_PRIMARY", TimeZoneLeapSecond.TIME_ZONE_LEAP_SECOND.TRANSITION_TIME);
        public static final UniqueKey<TimeZoneNameRecord> KEY_TIME_ZONE_NAME_PRIMARY = Internal.createUniqueKey(TimeZoneName.TIME_ZONE_NAME, "KEY_time_zone_name_PRIMARY", TimeZoneName.TIME_ZONE_NAME.NAME);
        public static final UniqueKey<TimeZoneTransitionRecord> KEY_TIME_ZONE_TRANSITION_PRIMARY = Internal.createUniqueKey(TimeZoneTransition.TIME_ZONE_TRANSITION, "KEY_time_zone_transition_PRIMARY", TimeZoneTransition.TIME_ZONE_TRANSITION.TIME_ZONE_ID, TimeZoneTransition.TIME_ZONE_TRANSITION.TRANSITION_TIME);
        public static final UniqueKey<TimeZoneTransitionTypeRecord> KEY_TIME_ZONE_TRANSITION_TYPE_PRIMARY = Internal.createUniqueKey(TimeZoneTransitionType.TIME_ZONE_TRANSITION_TYPE, "KEY_time_zone_transition_type_PRIMARY", TimeZoneTransitionType.TIME_ZONE_TRANSITION_TYPE.TIME_ZONE_ID, TimeZoneTransitionType.TIME_ZONE_TRANSITION_TYPE.TRANSITION_TYPE_ID);
        public static final UniqueKey<TransactionRegistryRecord> KEY_TRANSACTION_REGISTRY_PRIMARY = Internal.createUniqueKey(TransactionRegistry.TRANSACTION_REGISTRY, "KEY_transaction_registry_PRIMARY", TransactionRegistry.TRANSACTION_REGISTRY.TRANSACTION_ID);
        public static final UniqueKey<TransactionRegistryRecord> KEY_TRANSACTION_REGISTRY_COMMIT_ID = Internal.createUniqueKey(TransactionRegistry.TRANSACTION_REGISTRY, "KEY_transaction_registry_commit_id", TransactionRegistry.TRANSACTION_REGISTRY.COMMIT_ID);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.HOST, User.USER.USER_);
    }
}
