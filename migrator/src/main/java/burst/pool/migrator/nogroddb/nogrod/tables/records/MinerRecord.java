/*
 * This file is generated by jOOQ.
 */
package burst.pool.migrator.nogroddb.nogrod.tables.records;


import burst.pool.migrator.nogroddb.nogrod.tables.Miner;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MinerRecord extends UpdatableRecordImpl<MinerRecord> implements Record2<ULong, Long> {

    private static final long serialVersionUID = 1933526879;

    /**
     * Setter for <code>nogrod.miner.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>nogrod.miner.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>nogrod.miner.capacity</code>.
     */
    public void setCapacity(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>nogrod.miner.capacity</code>.
     */
    public Long getCapacity() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<ULong, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<ULong, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return Miner.MINER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Miner.MINER.CAPACITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getCapacity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getCapacity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MinerRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MinerRecord value2(Long value) {
        setCapacity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MinerRecord values(ULong value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MinerRecord
     */
    public MinerRecord() {
        super(Miner.MINER);
    }

    /**
     * Create a detached, initialised MinerRecord
     */
    public MinerRecord(ULong id, Long capacity) {
        super(Miner.MINER);

        set(0, id);
        set(1, capacity);
    }
}
