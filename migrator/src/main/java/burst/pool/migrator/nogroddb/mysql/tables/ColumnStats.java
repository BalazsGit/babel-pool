/*
 * This file is generated by jOOQ.
 */
package burst.pool.migrator.nogroddb.mysql.tables;


import burst.pool.migrator.nogroddb.mysql.Indexes;
import burst.pool.migrator.nogroddb.mysql.Keys;
import burst.pool.migrator.nogroddb.mysql.Mysql;
import burst.pool.migrator.nogroddb.mysql.enums.ColumnStatsHistType;
import burst.pool.migrator.nogroddb.mysql.tables.records.ColumnStatsRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * Statistics on Columns
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ColumnStats extends TableImpl<ColumnStatsRecord> {

    private static final long serialVersionUID = 809094610;

    /**
     * The reference instance of <code>mysql.column_stats</code>
     */
    public static final ColumnStats COLUMN_STATS = new ColumnStats();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ColumnStatsRecord> getRecordType() {
        return ColumnStatsRecord.class;
    }

    /**
     * The column <code>mysql.column_stats.db_name</code>.
     */
    public final TableField<ColumnStatsRecord, String> DB_NAME = createField("db_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>mysql.column_stats.table_name</code>.
     */
    public final TableField<ColumnStatsRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>mysql.column_stats.column_name</code>.
     */
    public final TableField<ColumnStatsRecord, String> COLUMN_NAME = createField("column_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>mysql.column_stats.min_value</code>.
     */
    public final TableField<ColumnStatsRecord, byte[]> MIN_VALUE = createField("min_value", org.jooq.impl.SQLDataType.VARBINARY(255).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARBINARY)), this, "");

    /**
     * The column <code>mysql.column_stats.max_value</code>.
     */
    public final TableField<ColumnStatsRecord, byte[]> MAX_VALUE = createField("max_value", org.jooq.impl.SQLDataType.VARBINARY(255).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARBINARY)), this, "");

    /**
     * The column <code>mysql.column_stats.nulls_ratio</code>.
     */
    public final TableField<ColumnStatsRecord, BigDecimal> NULLS_RATIO = createField("nulls_ratio", org.jooq.impl.SQLDataType.DECIMAL(12, 4).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>mysql.column_stats.avg_length</code>.
     */
    public final TableField<ColumnStatsRecord, BigDecimal> AVG_LENGTH = createField("avg_length", org.jooq.impl.SQLDataType.DECIMAL(12, 4).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>mysql.column_stats.avg_frequency</code>.
     */
    public final TableField<ColumnStatsRecord, BigDecimal> AVG_FREQUENCY = createField("avg_frequency", org.jooq.impl.SQLDataType.DECIMAL(12, 4).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>mysql.column_stats.hist_size</code>.
     */
    public final TableField<ColumnStatsRecord, UByte> HIST_SIZE = createField("hist_size", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>mysql.column_stats.hist_type</code>.
     */
    public final TableField<ColumnStatsRecord, ColumnStatsHistType> HIST_TYPE = createField("hist_type", org.jooq.impl.SQLDataType.VARCHAR(14).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(burst.pool.migrator.nogroddb.mysql.enums.ColumnStatsHistType.class), this, "");

    /**
     * The column <code>mysql.column_stats.histogram</code>.
     */
    public final TableField<ColumnStatsRecord, byte[]> HISTOGRAM = createField("histogram", org.jooq.impl.SQLDataType.VARBINARY(255).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARBINARY)), this, "");

    /**
     * Create a <code>mysql.column_stats</code> table reference
     */
    public ColumnStats() {
        this(DSL.name("column_stats"), null);
    }

    /**
     * Create an aliased <code>mysql.column_stats</code> table reference
     */
    public ColumnStats(String alias) {
        this(DSL.name(alias), COLUMN_STATS);
    }

    /**
     * Create an aliased <code>mysql.column_stats</code> table reference
     */
    public ColumnStats(Name alias) {
        this(alias, COLUMN_STATS);
    }

    private ColumnStats(Name alias, Table<ColumnStatsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ColumnStats(Name alias, Table<ColumnStatsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Statistics on Columns"));
    }

    public <O extends Record> ColumnStats(Table<O> child, ForeignKey<O, ColumnStatsRecord> key) {
        super(child, key, COLUMN_STATS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mysql.MYSQL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COLUMN_STATS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ColumnStatsRecord> getPrimaryKey() {
        return Keys.KEY_COLUMN_STATS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ColumnStatsRecord>> getKeys() {
        return Arrays.<UniqueKey<ColumnStatsRecord>>asList(Keys.KEY_COLUMN_STATS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStats as(String alias) {
        return new ColumnStats(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnStats as(Name alias) {
        return new ColumnStats(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ColumnStats rename(String name) {
        return new ColumnStats(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ColumnStats rename(Name name) {
        return new ColumnStats(name, null);
    }
}
