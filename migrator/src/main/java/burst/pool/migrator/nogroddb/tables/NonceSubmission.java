/*
 * This file is generated by jOOQ.
 */
package burst.pool.migrator.nogroddb.tables;


import burst.pool.migrator.nogroddb.Indexes;
import burst.pool.migrator.nogroddb.Keys;
import burst.pool.migrator.nogroddb.NogrodVlp;
import burst.pool.migrator.nogroddb.tables.records.NonceSubmissionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NonceSubmission extends TableImpl<NonceSubmissionRecord> {

    private static final long serialVersionUID = -2033993627;

    /**
     * The reference instance of <code>nogrod_vlp.nonce_submission</code>
     */
    public static final NonceSubmission NONCE_SUBMISSION = new NonceSubmission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NonceSubmissionRecord> getRecordType() {
        return NonceSubmissionRecord.class;
    }

    /**
     * The column <code>nogrod_vlp.nonce_submission.id</code>.
     */
    public final TableField<NonceSubmissionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>nogrod_vlp.nonce_submission.miner_id</code>.
     */
    public final TableField<NonceSubmissionRecord, ULong> MINER_ID = createField("miner_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>nogrod_vlp.nonce_submission.block_height</code>.
     */
    public final TableField<NonceSubmissionRecord, ULong> BLOCK_HEIGHT = createField("block_height", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>nogrod_vlp.nonce_submission.deadline</code>.
     */
    public final TableField<NonceSubmissionRecord, ULong> DEADLINE = createField("deadline", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>nogrod_vlp.nonce_submission.nonce</code>.
     */
    public final TableField<NonceSubmissionRecord, ULong> NONCE = createField("nonce", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>nogrod_vlp.nonce_submission</code> table reference
     */
    public NonceSubmission() {
        this(DSL.name("nonce_submission"), null);
    }

    /**
     * Create an aliased <code>nogrod_vlp.nonce_submission</code> table reference
     */
    public NonceSubmission(String alias) {
        this(DSL.name(alias), NONCE_SUBMISSION);
    }

    /**
     * Create an aliased <code>nogrod_vlp.nonce_submission</code> table reference
     */
    public NonceSubmission(Name alias) {
        this(alias, NONCE_SUBMISSION);
    }

    private NonceSubmission(Name alias, Table<NonceSubmissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private NonceSubmission(Name alias, Table<NonceSubmissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> NonceSubmission(Table<O> child, ForeignKey<O, NonceSubmissionRecord> key) {
        super(child, key, NONCE_SUBMISSION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return NogrodVlp.NOGROD_VLP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.NONCE_SUBMISSION_BLOCK_MINER_UNIQUE, Indexes.NONCE_SUBMISSION_MINER_FK_IDX, Indexes.NONCE_SUBMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<NonceSubmissionRecord, Long> getIdentity() {
        return Keys.IDENTITY_NONCE_SUBMISSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NonceSubmissionRecord> getPrimaryKey() {
        return Keys.KEY_NONCE_SUBMISSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NonceSubmissionRecord>> getKeys() {
        return Arrays.<UniqueKey<NonceSubmissionRecord>>asList(Keys.KEY_NONCE_SUBMISSION_PRIMARY, Keys.KEY_NONCE_SUBMISSION_BLOCK_MINER_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<NonceSubmissionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<NonceSubmissionRecord, ?>>asList(Keys.MINER_FK, Keys.MINER_BLOCK_FK);
    }

    public Account account() {
        return new Account(this, Keys.MINER_FK);
    }

    public Block block() {
        return new Block(this, Keys.MINER_BLOCK_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NonceSubmission as(String alias) {
        return new NonceSubmission(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NonceSubmission as(Name alias) {
        return new NonceSubmission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NonceSubmission rename(String name) {
        return new NonceSubmission(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NonceSubmission rename(Name name) {
        return new NonceSubmission(name, null);
    }
}
